openapi: 3.0.0
info:
  title: FuelSync Hub API
  version: "1.0.0"
servers:
  - url: /api/v1
paths:
  /admin/users:
    post:
      summary: Create super admin user
    get:
      summary: List super admin users
  /api/v1/auth/login:
    post:
      summary: User login and JWT issuance
  /api/v1/auth/logout:
    post:
      summary: User logout
  /api/v1/auth/refresh:
    post:
      summary: Refresh JWT token
  /api/v1/users:
    post:
      summary: Create tenant user
    get:
      summary: List tenant users
  /api/v1/stations:
    post:
      summary: Create station
    get:
      summary: List stations
  /api/v1/stations/{id}:
    put:
      summary: Update station
    delete:
      summary: Delete station
  /api/v1/stations/{id}/metrics:
    get:
      summary: Station metrics summary
  /api/v1/stations/{id}/performance:
    get:
      summary: Station performance comparison
  /api/v1/pumps:
    post:
      summary: Create pump
    get:
      summary: List pumps
  /api/v1/pumps/{id}:
    delete:
      summary: Delete pump
  /api/v1/nozzles:
    post:
      summary: Create nozzle
    get:
      summary: List nozzles
  /api/v1/nozzles/{id}:
    delete:
      summary: Delete nozzle
  /api/v1/nozzle-readings:
    post:
      summary: Record nozzle reading and generate sale
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nozzleId:
                  type: string
                reading:
                  type: number
                recordedAt:
                  type: string
                  format: date-time
                creditorId:
                  type: string
                  nullable: true
                paymentMethod:
                  type: string
                  enum: [cash, card, upi, credit]
                  description: |
                    Optional. Currently the API infers 'cash' or 'credit' based on
                    `creditorId`. Support for `card` and `upi` is planned.
              required:
                - nozzleId
                - reading
                - recordedAt
    get:
      summary: List nozzle readings
  /api/v1/fuel-prices:
    post:
      summary: Create fuel price entry
    get:
      summary: List fuel prices
  /api/v1/fuel-prices/{id}:
    put:
      summary: Update fuel price
  /api/v1/alerts:
    get:
      summary: List alerts
  /api/v1/alerts/{id}/read:
    patch:
      summary: Mark alert read
  /api/v1/analytics/station-comparison:
    get:
      summary: Station comparison metrics
  /api/v1/reports/sales:
    post:
      summary: Export sales report
  /api/v1/creditors:
    post:
      summary: Create creditor
    get:
      summary: List creditors
  /api/v1/creditors/{id}:
    put:
      summary: Update creditor
    delete:
      summary: Delete creditor
  /api/v1/credit-payments:
    post:
      summary: Record credit payment
    get:
      summary: List credit payments
  /api/v1/fuel-deliveries:
    post:
      summary: Record fuel delivery
    get:
      summary: List fuel deliveries
  /api/v1/sales:
    get:
      summary: List sales records
  /api/v1/sales/analytics:
    get:
      summary: Sales aggregation metrics
  /api/v1/reconciliation:
    post:
      summary: Run daily reconciliation
  /api/v1/reconciliation/{stationId}:
    get:
      summary: Get reconciliation summary
  /api/v1/reconciliation/daily-summary:
    get:
      summary: Daily nozzle reading summary
  /api/v1/dashboard/sales-summary:
    get:
      summary: Dashboard sales summary
  /api/v1/dashboard/payment-methods:
    get:
      summary: Dashboard payment method breakdown
  /api/v1/dashboard/fuel-breakdown:
    get:
      summary: Dashboard fuel breakdown
  /api/v1/dashboard/top-creditors:
    get:
      summary: Dashboard top creditors
  /api/v1/dashboard/sales-trend:
    get:
      summary: Dashboard sales trend
  /admin/tenants/summary:
    get:
      summary: Get tenant metrics summary
  /admin/tenants:
    get:
      summary: List tenants
    post:
      summary: Create tenant
  /admin/analytics:
    get:
      summary: Super admin analytics
  /api/v1/tenants:
    get:
      summary: List tenants
    post:
      summary: Create tenant

# TODO: Define component schemas for all routes
